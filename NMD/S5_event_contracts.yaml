# S5 - Event Contracts for Scraper Data Sources
# Generated: 2025-09-17
# Version: 1.0
# Description: Scraper-specific payload specifications derived from table contracts
# Purpose: Define exact format requirements for scrapers to emit compliant data

metadata:
  version: "1.0"
  created_date: "2025-09-17"
  created_by: "database-schema-architect"
  description: "Event contracts for 4 active data sources with scraper specifications"
  source_tables: 4
  total_records: 13463
  export_format: "NDJSON"
  batch_size_default: 100

# =====================================================
# SCRAPER EVENT CONTRACTS
# =====================================================

event_contracts:

  # =====================================================
  # DTC CODES GITHUB SCRAPER
  # =====================================================
  dtc_codes_github:
    entity_name: "GitHub DTC Code"
    description: "Diagnostic trouble codes extracted from GitHub repositories"
    source_system: "github_scraper"
    target_table: "dtc_codes_github"
    current_records: 1000

    batch_configuration:
      recommended_batch_size: 50
      max_batch_size: 200
      export_format: "NDJSON"
      deduplication_key: ["dtc_code", "source"]

    required_fields:
      dtc_code:
        type: "string"
        pattern: "^[PBCU]\\d{4}$"
        description: "Standard DTC format: P=Powertrain, B=Body, C=Chassis, U=Network"
        example: "P0301"

      description:
        type: "string"
        min_length: 10
        max_length: 500
        description: "Detailed description of the diagnostic trouble code"
        example: "Cylinder 1 Misfire Detected"

      category:
        type: "string"
        enum: ["P", "B", "C", "U"]
        description: "DTC category derived from first character of code"
        example: "P"

      source:
        type: "string"
        pattern: "^github_[a-z0-9_]+$"
        description: "GitHub source identifier"
        example: "github_automotive_dtc_db"

      extraction_date:
        type: "string"
        format: "date-time"
        description: "When the code was extracted from GitHub"
        example: "2025-09-17T10:30:00Z"

      import_timestamp:
        type: "string"
        format: "date-time"
        description: "When the record was imported into the database"
        example: "2025-09-17T10:35:00Z"

    optional_fields:
      subcategory:
        type: "string"
        max_length: 100
        description: "More specific subcategory within the main category"

      severity:
        type: "string"
        enum: ["informational", "minor", "moderate", "major", "critical"]
        description: "Severity level of the diagnostic code"

      system:
        type: "string"
        enum: ["engine", "transmission", "abs_brakes", "airbag_srs", "body_control", "climate_control", "fuel_system", "exhaust_emissions", "ignition_system", "cooling_system", "charging_system", "starter_system", "suspension", "steering", "lighting", "security_system", "communication_bus", "hybrid_electric", "diesel_aftertreatment"]
        description: "Specific system affected by the code"

      common_causes:
        type: "array"
        items_type: "string"
        items_max_length: 200
        description: "Common causes for this diagnostic code"

      symptoms:
        type: "array"
        items_type: "string"
        items_max_length: 200
        description: "Common symptoms associated with this code"

      diagnostic_steps:
        type: "array"
        items_type: "string"
        items_max_length: 500
        description: "Diagnostic steps to troubleshoot this code"

      potential_solutions:
        type: "array"
        items_type: "string"
        items_max_length: 300
        description: "Potential solutions or repairs"

      related_codes:
        type: "array"
        items_type: "string"
        items_pattern: "^[PBCU]\\d{4}$"
        description: "Related DTC codes that may appear together"

      source_details:
        type: "object"
        properties:
          repository_url:
            type: "string"
            pattern: "^https://github\\.com/.+"
          repository_name:
            type: "string"
            max_length: 200
          file_path:
            type: "string"
            max_length: 500
          commit_hash:
            type: "string"
            pattern: "^[a-f0-9]{40}$"
          branch:
            type: "string"
            max_length: 100
          author:
            type: "string"
            max_length: 100
          license:
            type: "string"
            max_length: 50

      vehicle_compatibility:
        type: "object"
        properties:
          makes:
            type: "array"
            items_type: "string"
            items_max_length: 50
          models:
            type: "array"
            items_type: "string"
            items_max_length: 50
          year_ranges:
            type: "array"
            items_type: "object"
          engine_types:
            type: "array"
            items_type: "string"
            items_max_length: 100

    field_mappings:
      # Source field â†’ Database field
      error_code: dtc_code
      trouble_code: dtc_code
      code: dtc_code
      desc: description
      summary: description
      repo_url: source_details.repository_url
      repo: source_details.repository_name
      commit: source_details.commit_hash
      scraped_at: extraction_date
      ingested_at: import_timestamp

    validation_rules:
      - "DTC category must match first character of dtc_code"
      - "import_timestamp must be after extraction_date"
      - "source must start with 'github_'"
      - "If vehicle_compatibility.year_ranges provided, start_year <= end_year"

    example_payload:
      dtc_code: "P0301"
      description: "Cylinder 1 Misfire Detected - Engine misfiring in cylinder 1"
      category: "P"
      subcategory: "ignition_system"
      severity: "major"
      system: "engine"
      common_causes: ["Faulty spark plug", "Bad ignition coil", "Fuel injector issues"]
      symptoms: ["Engine shake", "Poor acceleration", "Check engine light"]
      source: "github_obd_codes_db"
      source_details:
        repository_url: "https://github.com/automotive/obd-codes"
        repository_name: "obd-codes"
        file_path: "codes/powertrain/P0301.json"
        commit_hash: "abc123def456789012345678901234567890abcd"
        branch: "main"
        author: "automotive-team"
      extraction_date: "2025-09-17T10:30:00Z"
      import_timestamp: "2025-09-17T10:35:00Z"

  # =====================================================
  # REDDIT DIAGNOSTIC POSTS SCRAPER
  # =====================================================
  reddit_diagnostic_posts:
    entity_name: "Reddit Diagnostic Post"
    description: "Reddit posts and comments with automotive diagnostic information"
    source_system: "reddit_scraper"
    target_table: "reddit_diagnostic_posts"
    current_records: 11462

    batch_configuration:
      recommended_batch_size: 100
      max_batch_size: 500
      export_format: "NDJSON"
      deduplication_key: ["url"]

    required_fields:
      url:
        type: "string"
        pattern: "^https?://(?:www\\.)?reddit\\.com/r/.+"
        description: "Reddit post or comment URL"
        example: "https://www.reddit.com/r/MechanicAdvice/comments/abc123/check_engine_light_help/"

      timestamp:
        type: "string"
        format: "date-time"
        description: "Original post/comment timestamp"
        example: "2025-09-17T08:45:00Z"

      source_type:
        type: "string"
        enum: ["post", "comment"]
        description: "Whether this is a post or comment"
        example: "post"

      source:
        type: "string"
        pattern: "^reddit_[a-z0-9_]+$"
        description: "Reddit scraper source identifier"
        example: "reddit_mechanic_advice"

      import_timestamp:
        type: "string"
        format: "date-time"
        description: "When the record was imported into database"
        example: "2025-09-17T09:00:00Z"

    conditional_required:
      # Required for posts
      post_id:
        type: "string"
        max_length: 20
        description: "Reddit post ID (required for posts)"
        condition: "source_type == 'post'"

      # Required for comments
      comment_id:
        type: "string"
        max_length: 20
        description: "Reddit comment ID (required for comments)"
        condition: "source_type == 'comment'"

    optional_fields:
      title:
        type: "string"
        max_length: 300
        description: "Post title (for posts only, null for comments)"

      content:
        type: "string"
        max_length: 40000
        description: "Post or comment content text"

      author:
        type: "string"
        max_length: 50
        description: "Reddit username (may be deleted or anonymized)"

      subreddit:
        type: "string"
        max_length: 50
        description: "Subreddit name where post was found"

      score:
        type: "integer"
        description: "Reddit score (upvotes - downvotes)"

      num_comments:
        type: "integer"
        minimum: 0
        description: "Number of comments (for posts only)"

      equipment:
        type: "object"
        properties:
          vin:
            type: "string"
            pattern: "^[A-HJ-NPR-Z0-9]{17}$"
          make:
            type: "string"
            max_length: 50
          model:
            type: "string"
            max_length: 50
          year:
            type: "integer"
            minimum: 1980
            maximum: 2030
          engine:
            type: "string"
            max_length: 100
          mileage:
            type: "integer"
            minimum: 0
            maximum: 1000000
          transmission:
            type: "string"
            enum: ["manual", "automatic", "cvt", "dual_clutch"]

      diagnostic_codes:
        type: "array"
        items_type: "object"
        items_properties:
          code:
            type: "string"
            pattern: "^[PBCU]\\d{4}$"
          description:
            type: "string"
            max_length: 500
          status:
            type: "string"
            enum: ["current", "pending", "permanent", "history"]

      symptoms:
        type: "array"
        items_type: "string"
        items_max_length: 200
        description: "Symptoms described in the post"

      solutions_attempted:
        type: "array"
        items_type: "string"
        items_max_length: 300
        description: "Solutions or repairs attempted"

      cost:
        type: "number"
        minimum: 0
        maximum: 100000
        description: "Repair cost mentioned (USD, max $100k)"

      resolution:
        type: "object"
        properties:
          was_resolved:
            type: "boolean"
          solution:
            type: "string"
            max_length: 1000
          parts_replaced:
            type: "array"
            items_type: "string"
            items_max_length: 100
          labor_hours:
            type: "number"
            minimum: 0
            maximum: 100

    field_mappings:
      # Source field â†’ Database field
      permalink: url
      created_utc: timestamp
      selftext: content
      body: content
      ups: score
      upvote_ratio: score
      car_make: equipment.make
      car_model: equipment.model
      car_year: equipment.year
      vehicle_make: equipment.make
      vehicle_model: equipment.model
      vehicle_year: equipment.year
      error_codes: diagnostic_codes
      dtc_codes: diagnostic_codes
      trouble_codes: diagnostic_codes
      scraped_at: import_timestamp

    validation_rules:
      - "import_timestamp must be after timestamp"
      - "timestamp must be after 2005-06-23 (Reddit founding)"
      - "comment_id required when source_type is 'comment'"
      - "post_id required when source_type is 'post'"
      - "title should be null for comments"
      - "VIN must be valid 17-character format if provided"

    example_payload:
      url: "https://www.reddit.com/r/MechanicAdvice/comments/abc123/p0301_code_help/"
      post_id: "abc123"
      title: "P0301 code - need help diagnosing"
      content: "My 2018 Honda Civic is throwing a P0301 code. Engine is misfiring and shaking at idle. Already tried new spark plugs but issue persists. Any ideas?"
      author: "car_owner_2024"
      subreddit: "MechanicAdvice"
      score: 15
      num_comments: 8
      timestamp: "2025-09-17T08:45:00Z"
      source_type: "post"
      equipment:
        make: "Honda"
        model: "Civic"
        year: 2018
        mileage: 45000
        transmission: "automatic"
      diagnostic_codes:
        - code: "P0301"
          description: "Cylinder 1 Misfire Detected"
          status: "current"
      symptoms: ["Engine shake", "Rough idle", "Check engine light"]
      solutions_attempted: ["Replaced spark plugs", "Checked air filter"]
      source: "reddit_mechanic_advice"
      import_timestamp: "2025-09-17T09:00:00Z"

  # =====================================================
  # YOUTUBE REPAIR VIDEOS SCRAPER
  # =====================================================
  youtube_repair_videos:
    entity_name: "YouTube Repair Video"
    description: "YouTube videos with automotive repair and diagnostic content"
    source_system: "youtube_scraper"
    target_table: "youtube_repair_videos"
    current_records: 1000

    batch_configuration:
      recommended_batch_size: 25
      max_batch_size: 100
      export_format: "NDJSON"
      deduplication_key: ["video_id"]

    required_fields:
      source:
        type: "string"
        pattern: "^youtube_[a-z0-9_]+$"
        description: "YouTube scraper source identifier"
        example: "youtube_repair_channel"

      import_timestamp:
        type: "string"
        format: "date-time"
        description: "When the record was imported into database"
        example: "2025-09-17T11:00:00Z"

    optional_fields:
      video_id:
        type: "string"
        pattern: "^[a-zA-Z0-9_-]{11}$"
        description: "YouTube video ID (11 characters)"
        example: "dQw4w9WgXcQ"

      url:
        type: "string"
        pattern: "^https?://(www\\.)?(youtube\\.com/watch\\?v=|youtu\\.be/)[a-zA-Z0-9_-]{11}"
        description: "Full YouTube video URL"
        example: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"

      title:
        type: "string"
        min_length: 5
        max_length: 200
        description: "Video title"
        example: "How to Fix P0301 Misfire - Honda Civic DIY Repair"

      description:
        type: "string"
        max_length: 5000
        description: "Video description"

      channel:
        type: "string"
        max_length: 100
        description: "YouTube channel name"
        example: "ChrisFix"

      channel_id:
        type: "string"
        pattern: "^UC[a-zA-Z0-9_-]{22}$"
        description: "YouTube channel ID (starts with UC)"

      duration_seconds:
        type: "integer"
        minimum: 1
        maximum: 43200
        description: "Video duration in seconds (max 12 hours)"

      view_count:
        type: "integer"
        minimum: 0
        description: "Number of views"

      like_count:
        type: "integer"
        minimum: 0
        description: "Number of likes"

      comment_count:
        type: "integer"
        minimum: 0
        description: "Number of comments"

      published_at:
        type: "string"
        format: "date-time"
        description: "When video was published on YouTube"

      tags:
        type: "array"
        items_type: "string"
        items_max_length: 100
        max_items: 500
        description: "Video tags/keywords"

      category:
        type: "string"
        enum: ["autos_vehicles", "howto_style", "education", "science_technology", "entertainment", "people_blogs", "other"]
        description: "YouTube category"

      language:
        type: "string"
        pattern: "^[a-z]{2}(-[A-Z]{2})?$"
        description: "Video language (ISO 639-1 with optional region)"

      transcript:
        type: "object"
        properties:
          has_transcript:
            type: "boolean"
          transcript_text:
            type: "string"
            max_length: 100000
          auto_generated:
            type: "boolean"
          language:
            type: "string"
            pattern: "^[a-z]{2}(-[A-Z]{2})?$"

      repair_content:
        type: "object"
        properties:
          repair_type:
            type: "string"
            enum: ["diagnostic", "engine_repair", "transmission_repair", "brake_repair", "electrical_repair", "body_repair", "maintenance", "modification", "troubleshooting", "replacement", "rebuild"]
          difficulty_level:
            type: "string"
            enum: ["beginner", "intermediate", "advanced", "professional"]
          estimated_time:
            type: "string"
            max_length: 50
          tools_required:
            type: "array"
            items_type: "string"
            items_max_length: 100
          parts_mentioned:
            type: "array"
            items_type: "string"
            items_max_length: 100
          cost_estimate:
            type: "number"
            minimum: 0
            maximum: 50000

      vehicle_info:
        type: "object"
        properties:
          make:
            type: "string"
            max_length: 50
          model:
            type: "string"
            max_length: 50
          year:
            type: "integer"
            minimum: 1980
            maximum: 2030
          engine:
            type: "string"
            max_length: 100
          applicable_years:
            type: "array"
            items_type: "integer"
            items_minimum: 1980
            items_maximum: 2030

      diagnostic_codes:
        type: "array"
        items_type: "object"
        items_properties:
          code:
            type: "string"
            pattern: "^[PBCU]\\d{4}$"
          mention_timestamp:
            type: "integer"
            minimum: 0

    field_mappings:
      # Source field â†’ Database field
      id: video_id
      videoId: video_id
      watch_url: url
      video_url: url
      channelTitle: channel
      channel_name: channel
      channelId: channel_id
      lengthSeconds: duration_seconds
      duration: duration_seconds
      viewCount: view_count
      views: view_count
      likeCount: like_count
      likes: like_count
      commentCount: comment_count
      comments: comment_count
      publishedAt: published_at
      upload_date: published_at
      categoryId: category
      defaultLanguage: language
      car_make: vehicle_info.make
      car_model: vehicle_info.model
      car_year: vehicle_info.year
      vehicle_make: vehicle_info.make
      vehicle_model: vehicle_info.model
      vehicle_year: vehicle_info.year
      scraped_at: import_timestamp

    validation_rules:
      - "video_id required when title provided"
      - "url and video_id must be consistent if both provided"
      - "duration_seconds must be greater than average_watch_time if both provided"
      - "like_ratio must be between 0 and 1"
      - "published_at should be before import_timestamp"

    example_payload:
      video_id: "dQw4w9WgXcQ"
      url: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
      title: "How to Fix P0301 Misfire - Honda Civic DIY Repair"
      description: "Complete guide to diagnosing and fixing a P0301 cylinder 1 misfire code on a 2018 Honda Civic. We'll cover common causes, diagnostic steps, and the repair process."
      channel: "ChrisFix"
      channel_id: "UCes1EvRjcKU4sY_UEavndBw"
      duration_seconds: 1248
      view_count: 125000
      like_count: 4200
      comment_count: 89
      published_at: "2025-09-15T14:30:00Z"
      tags: ["honda civic", "P0301", "misfire", "DIY repair", "automotive"]
      category: "autos_vehicles"
      language: "en-US"
      repair_content:
        repair_type: "diagnostic"
        difficulty_level: "intermediate"
        estimated_time: "2-4 hours"
        tools_required: ["OBD scanner", "Socket set", "Multimeter"]
        parts_mentioned: ["Spark plugs", "Ignition coil", "Fuel injector"]
        cost_estimate: 150.00
      vehicle_info:
        make: "Honda"
        model: "Civic"
        year: 2018
        applicable_years: [2016, 2017, 2018, 2019, 2020]
      diagnostic_codes:
        - code: "P0301"
          mention_timestamp: 45
      source: "youtube_repair_tutorials"
      import_timestamp: "2025-09-17T11:00:00Z"

  # =====================================================
  # EQUIPMENT REGISTRY SCRAPER
  # =====================================================
  equipment_registry:
    entity_name: "Equipment Registry Entry"
    description: "Universal equipment tracking and identification records"
    source_system: "equipment_scraper"
    target_table: "equipment_registry"
    current_records: 1

    batch_configuration:
      recommended_batch_size: 10
      max_batch_size: 50
      export_format: "NDJSON"
      deduplication_key: ["identification_primary"]

    required_fields:
      id:
        type: "string"
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
        description: "UUID v4 primary identifier (auto-generated if not provided)"
        example: "550e8400-e29b-41d4-a716-446655440000"

      identification_primary_type:
        type: "string"
        enum: ["vin", "serial_number", "asset_tag", "imei", "mac_address", "custom"]
        description: "Type of primary identification"
        example: "vin"

      identification_primary:
        type: "string"
        min_length: 1
        max_length: 100
        description: "Primary identification value - unique across all equipment"
        example: "1HGBH41JXMN109186"

      equipment_category:
        type: "string"
        enum: ["automotive", "heavy_equipment", "electronics", "machinery", "appliances", "marine", "agricultural"]
        description: "Primary equipment category"
        example: "automotive"

      created_at:
        type: "string"
        format: "date-time"
        description: "Timestamp when record was created"
        example: "2025-09-17T12:00:00Z"

      updated_at:
        type: "string"
        format: "date-time"
        description: "Timestamp when record was last updated"
        example: "2025-09-17T12:00:00Z"

    optional_fields:
      equipment_details:
        type: "object"
        properties:
          manufacturer:
            type: "string"
            max_length: 100
          model:
            type: "string"
            max_length: 100
          model_year:
            type: "integer"
            minimum: 1900
            maximum: 2030
          manufacture_date:
            type: "string"
            format: "date"
          color:
            type: "string"
            max_length: 50
          description:
            type: "string"
            max_length: 1000

      physical:
        type: "object"
        properties:
          weight_lbs:
            type: "number"
            minimum: 0
            maximum: 1000000
          dimensions_inches:
            type: "object"
            properties:
              length:
                type: "number"
                minimum: 0
              width:
                type: "number"
                minimum: 0
              height:
                type: "number"
                minimum: 0

      economics:
        type: "object"
        properties:
          original_msrp:
            type: "number"
            minimum: 0
          currency_code:
            type: "string"
            pattern: "^[A-Z]{3}$"
          depreciation_rate:
            type: "number"
            minimum: 0
            maximum: 1

      power:
        type: "object"
        properties:
          voltage_primary:
            type: "integer"
            minimum: 1
            maximum: 100000
          amperage_max:
            type: "number"
            minimum: 0
          horsepower:
            type: "number"
            minimum: 0

      ownership:
        type: "object"
        properties:
          owner_id:
            type: "string"
            pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          operator_id:
            type: "string"
            pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          organization_id:
            type: "string"
            pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          gps_coordinates:
            type: "object"
            properties:
              latitude:
                type: "number"
                minimum: -90
                maximum: 90
              longitude:
                type: "number"
                minimum: -180
                maximum: 180

      registration:
        type: "object"
        properties:
          registration_number:
            type: "string"
            max_length: 50
          registration_state:
            type: "string"
            pattern: "^[A-Z]{2}$"
          registration_expiry:
            type: "string"
            format: "date"

      deleted_at:
        type: "string"
        format: "date-time"
        description: "Timestamp when record was soft deleted (null if active)"

      is_active:
        type: "boolean"
        default: true
        description: "Whether equipment is active"

    field_mappings:
      # Source field â†’ Database field
      vin: identification_primary
      serial: identification_primary
      asset_id: identification_primary
      primary_id: identification_primary
      id_type: identification_primary_type
      identifier_type: identification_primary_type
      category: equipment_category
      type: equipment_category
      make: equipment_details.manufacturer
      manufacturer: equipment_details.manufacturer
      brand: equipment_details.manufacturer
      model: equipment_details.model
      year: equipment_details.model_year
      model_year: equipment_details.model_year
      mfg_date: equipment_details.manufacture_date
      weight: physical.weight_lbs
      msrp: economics.original_msrp
      original_price: economics.original_msrp
      price: economics.original_msrp
      currency: economics.currency_code
      hp: power.horsepower
      horsepower: power.horsepower
      voltage: power.voltage_primary
      owner: ownership.owner_id
      lat: ownership.gps_coordinates.latitude
      lon: ownership.gps_coordinates.longitude
      longitude: ownership.gps_coordinates.longitude
      latitude: ownership.gps_coordinates.latitude
      registration: registration.registration_number
      reg_number: registration.registration_number
      state: registration.registration_state
      reg_state: registration.registration_state
      active: is_active
      status: is_active

    validation_rules:
      - "If identification_primary_type is 'vin', identification_primary must be 17 characters matching [A-HJ-NPR-Z0-9]"
      - "If equipment_category is 'automotive', identification_primary should be VIN format"
      - "If economics.original_msrp provided, economics.currency_code is required"
      - "GPS coordinates must be valid latitude (-90 to 90) and longitude (-180 to 180)"
      - "updated_at must be >= created_at"

    example_payload:
      id: "550e8400-e29b-41d4-a716-446655440000"
      identification_primary_type: "vin"
      identification_primary: "1HGBH41JXMN109186"
      equipment_category: "automotive"
      equipment_details:
        manufacturer: "Honda"
        model: "Accord"
        model_year: 2022
        color: "Silver"
        description: "2022 Honda Accord LX Sedan"
      physical:
        weight_lbs: 3131
        dimensions_inches:
          length: 192.2
          width: 73.3
          height: 57.1
      economics:
        original_msrp: 25000.00
        currency_code: "USD"
        depreciation_rate: 0.15
      power:
        horsepower: 192
      ownership:
        gps_coordinates:
          latitude: 40.7128
          longitude: -74.0060
      registration:
        registration_number: "ABC1234"
        registration_state: "NY"
        registration_expiry: "2026-09-15"
      is_active: true
      created_at: "2025-09-17T12:00:00Z"
      updated_at: "2025-09-17T12:00:00Z"

# =====================================================
# GLOBAL VALIDATION RULES
# =====================================================
global_validation:
  data_quality_requirements:
    - "All timestamps must be in ISO 8601 format with timezone"
    - "All URLs must be valid and accessible"
    - "All UUIDs must be valid v4 format"
    - "All enum values must match exactly (case-sensitive)"
    - "All VINs must be valid 17-character format [A-HJ-NPR-Z0-9]"
    - "All DTC codes must be valid format [PBCU]\\d{4}"

  export_requirements:
    format: "NDJSON"
    encoding: "UTF-8"
    max_file_size_mb: 100
    compression: "gzip (optional)"
    filename_pattern: "{table_name}_{YYYYMMDD}_{HHMMSS}.ndjson"
    batch_metadata:
      - "Include batch_id in each record"
      - "Include source_system identifier"
      - "Include export_timestamp"

  error_handling:
    duplicate_handling: "Skip with warning"
    validation_failure: "Log error and continue"
    missing_required_field: "Reject record"
    invalid_format: "Reject record with detailed error"

  monitoring:
    success_rate_threshold: 0.95
    max_processing_time_minutes: 30
    alert_on_zero_records: true
    alert_on_validation_failures: true

# =====================================================
# CHANGE LOG
# =====================================================
change_log:
  - date: "2025-09-17"
    version: "1.0"
    changes:
      - "Initial event contracts created from S2b table contracts"
      - "Added field mappings for all 4 active data sources"
      - "Defined validation rules and example payloads"
      - "Specified batch configurations and export requirements"