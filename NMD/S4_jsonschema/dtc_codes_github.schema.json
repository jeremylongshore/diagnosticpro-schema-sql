{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://diagnosticpro.com/schemas/dtc_codes_github.json",
  "title": "DTC Codes GitHub",
  "description": "Diagnostic trouble codes from GitHub repositories schema",
  "type": "object",
  "required": [
    "dtc_code",
    "description",
    "category",
    "source",
    "extraction_date",
    "import_timestamp"
  ],
  "properties": {
    "dtc_code": {
      "type": "string",
      "pattern": "^[PBCU]\\d{4}$",
      "description": "Standard DTC format: P=Powertrain, B=Body, C=Chassis, U=Network"
    },
    "description": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Detailed description of the diagnostic trouble code"
    },
    "category": {
      "type": "string",
      "enum": ["P", "B", "C", "U"],
      "description": "DTC category: P=Powertrain, B=Body, C=Chassis, U=Network"
    },
    "subcategory": {
      "type": ["string", "null"],
      "maxLength": 100,
      "description": "More specific subcategory within the main category"
    },
    "severity": {
      "type": ["string", "null"],
      "enum": ["informational", "minor", "moderate", "major", "critical"],
      "description": "Severity level of the diagnostic code"
    },
    "system": {
      "type": ["string", "null"],
      "enum": [
        "engine",
        "transmission",
        "abs_brakes",
        "airbag_srs",
        "body_control",
        "climate_control",
        "fuel_system",
        "exhaust_emissions",
        "ignition_system",
        "cooling_system",
        "charging_system",
        "starter_system",
        "suspension",
        "steering",
        "lighting",
        "security_system",
        "communication_bus",
        "hybrid_electric",
        "diesel_aftertreatment"
      ],
      "description": "Specific system affected by the code"
    },
    "common_causes": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 200
      },
      "description": "Common causes for this diagnostic code"
    },
    "symptoms": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 200
      },
      "description": "Common symptoms associated with this code"
    },
    "diagnostic_steps": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 500
      },
      "description": "Diagnostic steps to troubleshoot this code"
    },
    "potential_solutions": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 300
      },
      "description": "Potential solutions or repairs"
    },
    "related_codes": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[PBCU]\\d{4}$"
      },
      "description": "Related DTC codes that may appear together"
    },
    "source": {
      "type": "string",
      "pattern": "^github_[a-z0-9_]+$",
      "description": "GitHub source identifier"
    },
    "source_details": {
      "type": "object",
      "properties": {
        "repository_url": {
          "type": ["string", "null"],
          "pattern": "^https://github\\.com/.+",
          "description": "GitHub repository URL"
        },
        "repository_name": {
          "type": ["string", "null"],
          "maxLength": 200,
          "description": "Repository name"
        },
        "file_path": {
          "type": ["string", "null"],
          "maxLength": 500,
          "description": "Path to file containing the code"
        },
        "commit_hash": {
          "type": ["string", "null"],
          "pattern": "^[a-f0-9]{40}$",
          "description": "Git commit hash"
        },
        "branch": {
          "type": ["string", "null"],
          "maxLength": 100,
          "description": "Git branch name"
        },
        "author": {
          "type": ["string", "null"],
          "maxLength": 100,
          "description": "Repository author/owner"
        },
        "license": {
          "type": ["string", "null"],
          "maxLength": 50,
          "description": "Repository license type"
        }
      },
      "additionalProperties": false
    },
    "vehicle_compatibility": {
      "type": "object",
      "properties": {
        "makes": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 50
          },
          "description": "Vehicle makes this code applies to"
        },
        "models": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 50
          },
          "description": "Vehicle models this code applies to"
        },
        "year_ranges": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "start_year": {
                "type": "integer",
                "minimum": 1980,
                "maximum": 2030
              },
              "end_year": {
                "type": ["integer", "null"],
                "minimum": 1980,
                "maximum": 2030
              }
            },
            "required": ["start_year"],
            "additionalProperties": false
          },
          "description": "Year ranges this code applies to"
        },
        "engine_types": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 100
          },
          "description": "Engine types this code applies to"
        }
      },
      "additionalProperties": false
    },
    "extraction_date": {
      "type": "string",
      "format": "date-time",
      "description": "When the code was extracted from GitHub"
    },
    "import_timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "When the record was imported into the database"
    },
    "data_quality": {
      "type": "object",
      "properties": {
        "completeness_score": {
          "type": ["number", "null"],
          "minimum": 0.0,
          "maximum": 1.0,
          "description": "Data completeness score (0-1)"
        },
        "accuracy_score": {
          "type": ["number", "null"],
          "minimum": 0.0,
          "maximum": 1.0,
          "description": "Data accuracy score (0-1)"
        },
        "validation_status": {
          "type": ["string", "null"],
          "enum": ["pending", "validated", "rejected", "needs_review"],
          "description": "Validation status of the data"
        },
        "validation_notes": {
          "type": ["string", "null"],
          "maxLength": 500,
          "description": "Notes from validation process"
        }
      },
      "additionalProperties": false
    },
    "usage_statistics": {
      "type": "object",
      "properties": {
        "frequency_rank": {
          "type": ["integer", "null"],
          "minimum": 1,
          "description": "Frequency ranking of this code"
        },
        "occurrence_count": {
          "type": ["integer", "null"],
          "minimum": 0,
          "description": "Number of times this code has been encountered"
        },
        "last_reported": {
          "type": ["string", "null"],
          "format": "date",
          "description": "Last date this code was reported"
        }
      },
      "additionalProperties": false
    },
    "is_active": {
      "type": ["boolean", "null"],
      "default": true,
      "description": "Whether this code definition is active"
    },
    "is_oem_standard": {
      "type": ["boolean", "null"],
      "description": "Whether this follows OEM standard definition"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when record was created"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when record was last updated"
    }
  },
  "additionalProperties": false,
  "allOf": [
    {
      "description": "DTC category must match first character of code",
      "properties": {
        "dtc_code": {
          "type": "string"
        },
        "category": {
          "type": "string"
        }
      },
      "if": {
        "properties": {
          "dtc_code": {"pattern": "^P"}
        }
      },
      "then": {
        "properties": {
          "category": {"const": "P"}
        }
      }
    },
    {
      "if": {
        "properties": {
          "dtc_code": {"pattern": "^B"}
        }
      },
      "then": {
        "properties": {
          "category": {"const": "B"}
        }
      }
    },
    {
      "if": {
        "properties": {
          "dtc_code": {"pattern": "^C"}
        }
      },
      "then": {
        "properties": {
          "category": {"const": "C"}
        }
      }
    },
    {
      "if": {
        "properties": {
          "dtc_code": {"pattern": "^U"}
        }
      },
      "then": {
        "properties": {
          "category": {"const": "U"}
        }
      }
    },
    {
      "description": "Import timestamp must be after extraction date",
      "if": {
        "properties": {
          "extraction_date": {"type": "string"},
          "import_timestamp": {"type": "string"}
        }
      },
      "then": {
        "properties": {
          "import_timestamp": {
            "type": "string"
          }
        }
      }
    },
    {
      "description": "Year range validation",
      "if": {
        "properties": {
          "vehicle_compatibility": {
            "properties": {
              "year_ranges": {
                "type": "array",
                "contains": {
                  "properties": {
                    "start_year": {"type": "integer"},
                    "end_year": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      },
      "then": {
        "properties": {
          "vehicle_compatibility": {
            "properties": {
              "year_ranges": {
                "items": {
                  "if": {
                    "properties": {
                      "end_year": {"type": "integer"}
                    }
                  },
                  "then": {
                    "properties": {
                      "start_year": {"type": "integer"},
                      "end_year": {"type": "integer"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}